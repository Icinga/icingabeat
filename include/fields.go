// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package include

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("icingabeat", "fields.yml", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "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"
}
